<?xml version="1.0" encoding="utf-8"?>

<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="AndroidPermissions init"/>
	</init>

	<!-- optional updates applied to AndroidManifest.xml -->
	<androidManifestUpdates>

	</androidManifestUpdates> 

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>

		</insert>
	</proguardAdditions>

  <AARImports>
  </AARImports>

  	<prebuildCopies>
  	</prebuildCopies>


	<!-- optional files or directories to copy to Intermediate/Android/APK -->
 	<resourceCopies>
	</resourceCopies>

  <!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
		</insert>
	</gameActivityImportAdditions>
	

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert><![CDATA[
public native void nativeRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults);

public boolean AndroidThunkJava_HasPermission(String permission)
{
	Log.debug("AndroidThunkJava_HasPermission permission: " + permission);
	return ContextCompat.checkSelfPermission(this, permission) == PackageManager.PERMISSION_GRANTED;
}

public void AndroidThunkJava_RequestPermissions(String[] permissions, int requestCode)
{
	Log.debug("AndroidThunkJava_RequestPermissions permissions: " + permissions + ", requestCode: " + requestCode);
	ActivityCompat.requestPermissions(this, permissions, requestCode);
}
        ]]></insert>
	</gameActivityClassAdditions>

	<gameActivityOnRequestPermissionsResultAdditions>
		<insert><![CDATA[
nativeRequestPermissionsResult(requestCode, permissions, grantResults);
        ]]></insert>
	</gameActivityOnRequestPermissionsResultAdditions>
	
	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>

	</gameActivityReadMetadataAdditions>
	
	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
		<insert>

		</insert>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
		<insert>
		
		</insert>
	</gameActivityOnDestroyAdditions>
	
	
	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>
		
		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>

		</insert>
	</gameActivityOnStopAdditions>
	

	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
		<insert>

		</insert>
	</gameActivityOnPauseAdditions>


	<!-- optional additions to GameActivity onResume in GameActivity.java	-->
	<gameActivityOnResumeAdditions>
		<insert>

		</insert>
	</gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
		<insert>

		</insert>
	</gameActivityOnActivityResultAdditions>
	

	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>

	</soLoadLibrary>
</root>
